// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  TypedMap,
  Entity,
  Value,
  ValueKind,
  store,
  Address,
  Bytes,
  BigInt,
  BigDecimal
} from "@graphprotocol/graph-ts";

export class listeReedem extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id !== null, "Cannot save listeReedem entity without an ID");
    assert(
      id.kind == ValueKind.STRING,
      "Cannot save listeReedem entity with non-string ID. " +
        'Considering using .toHex() to convert the "id" to a string.'
    );
    store.set("listeReedem", id.toString(), this);
  }

  static load(id: string): listeReedem | null {
    return store.get("listeReedem", id) as listeReedem | null;
  }

  get id(): string {
    let value = this.get("id");
    return value.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get photoNft(): Bytes {
    let value = this.get("photoNft");
    return value.toBytes();
  }

  set photoNft(value: Bytes) {
    this.set("photoNft", Value.fromBytes(value));
  }

  get name(): string {
    let value = this.get("name");
    return value.toString();
  }

  set name(value: string) {
    this.set("name", Value.fromString(value));
  }

  get city(): string {
    let value = this.get("city");
    return value.toString();
  }

  set city(value: string) {
    this.set("city", Value.fromString(value));
  }

  get firstLine(): string {
    let value = this.get("firstLine");
    return value.toString();
  }

  set firstLine(value: string) {
    this.set("firstLine", Value.fromString(value));
  }

  get secondLine(): string {
    let value = this.get("secondLine");
    return value.toString();
  }

  set secondLine(value: string) {
    this.set("secondLine", Value.fromString(value));
  }

  get codePostal(): string {
    let value = this.get("codePostal");
    return value.toString();
  }

  set codePostal(value: string) {
    this.set("codePostal", Value.fromString(value));
  }

  get country(): string {
    let value = this.get("country");
    return value.toString();
  }

  set country(value: string) {
    this.set("country", Value.fromString(value));
  }

  get addressEmail(): string {
    let value = this.get("addressEmail");
    return value.toString();
  }

  set addressEmail(value: string) {
    this.set("addressEmail", Value.fromString(value));
  }

  get timesTmp(): BigInt {
    let value = this.get("timesTmp");
    return value.toBigInt();
  }

  set timesTmp(value: BigInt) {
    this.set("timesTmp", Value.fromBigInt(value));
  }

  get blockNumber(): BigInt {
    let value = this.get("blockNumber");
    return value.toBigInt();
  }

  set blockNumber(value: BigInt) {
    this.set("blockNumber", Value.fromBigInt(value));
  }
}
