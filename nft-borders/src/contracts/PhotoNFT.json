{
  "contractName": "PhotoNFT",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_nftName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_nftSymbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "photoPrice",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "adressEmail",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "redevance",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentPhotoId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_nftName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_nftSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"photoPrice\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"adressEmail\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"redevance\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"currentPhotoId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"mint(address,string)\":{\"details\":\"mint a photoNFTtokenURI - URL include ipfs hash\"},\"name()\":{\"details\":\"Gets the token name\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"owner address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted.     * Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"symbol()\":{\"details\":\"Gets the token symbol\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{},\"notice\":\"- This is the NFT contract for a photo\"}},\"settings\":{\"compilationTarget\":{\"project:/contracts/PhotoNFT.sol\":\"PhotoNFT\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/PhotoNFT.sol\":{\"keccak256\":\"0x2b50f798f5cf014029dd465c5511efc0ce3e76bb03dbe120cc14f6cd3c96cc3f\",\"urls\":[\"bzz-raw://2c64caff2e4e3059e32d1c7b55541b44dc93806865330476a1e7f7f83966476c\",\"dweb:/ipfs/QmcHmXfDLGk2xipyQdc7LmWCNvbMJA1LxKsNh3aH9vMxdF\"]},\"project:/contracts/openzeppelin-solidity/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x9da23588f58d0fa67097984e151bdaa6aa69c5e192bae17b44a90b0cfc194736\",\"urls\":[\"bzz-raw://5e88c7dbb4d1e6d3f133112b9994491b8531f5d9103cf41becd1c267d2cd67af\",\"dweb:/ipfs/QmNuSmDBgv616hXRshbHx48ufdZoSrcFHpwqP4iPg2ac4X\"]},\"project:/contracts/openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xbbb6159006ae3639daea09f7d63987816d6cf3a99f52af919363e025d3abf3b8\",\"urls\":[\"bzz-raw://35e7d742ee71461779df12a0ab1ad4701144d98eb6401182838c8daf40b008dd\",\"dweb:/ipfs/QmY4t7pxcX2cfk6VsGJWZLBgoKMpRctY8X1HPxykLjptSi\"]},\"project:/contracts/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzz-raw://1eb493553b27efd46c231a836a83ce50d215639feb97b4aac9f301d0fd034ff5\",\"dweb:/ipfs/QmbMdvSXcqGKxeeYvzF3VrWpoHQyVzMXBhzhAokF2Gdymv\"]},\"project:/contracts/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x0546fa662082b36ac9cbd418c0722a3c52718b9dc3fe3e284081d73f48036228\",\"urls\":[\"bzz-raw://a50dd4c1c7afa4ade53ee47bc782eaad72a45091ed9756081616b33eb6c150c4\",\"dweb:/ipfs/Qmb88e4EnSbJv2BbayFg6wZpFMJ9aPF7r4cwMjnZkUu4VK\"]},\"project:/contracts/openzeppelin-solidity/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0x6c1899ddf6ca192150b58ce0ad2a890d981282a3ec2620700fa1c9a381b79ba0\",\"urls\":[\"bzz-raw://d898fb28a61ef52f03fcc3be772b09aeb4c88ebe6e57b79d7275da94758d6afa\",\"dweb:/ipfs/QmRFuDxB532sYwB8JXq5LdHLAfGigcAHMvh4T4TBVrHPwK\"]},\"project:/contracts/openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol\":{\"keccak256\":\"0x21b8368e133ed2ee80f5feb602ff6bad7e3b9110b1ae90ea0faabf9c00527224\",\"urls\":[\"bzz-raw://ac1f35c6b92a163e16498daa3d471bfd218fad71f8067ae357950ddd31add718\",\"dweb:/ipfs/QmPk2WQbNXPW1jnnpDZXVxhgXATBU6fGwYFejWi21oL94M\"]},\"project:/contracts/openzeppelin-solidity/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0xb8deb41bb234969070dc362c144191f2781178c33cf6b434fd68aa3692834105\",\"urls\":[\"bzz-raw://83ef717ae1d047085d6ce2d63ed987c3282ba22190c09fa75f52346af2ac67bb\",\"dweb:/ipfs/QmQqQJor8zVE9kvYiCZscmerKrdLGgiELrn199zQEm7kZp\"]},\"project:/contracts/openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x1f059ee943273719130df645fa38069b792988e8b732585528d5b1265f5aa046\",\"urls\":[\"bzz-raw://31e4d99091a83a42a6ea14d74ceae2ec3ffb2905c7ee07358875af72ea188333\",\"dweb:/ipfs/Qmf7nHc6BwhbyawapCVRZHzhBHNoA8ftpQWmGSyToVKVzN\"]},\"project:/contracts/openzeppelin-solidity/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x1cded69b7f4e17fe634fecbf2bf43320beb11a95ba924c3665a11fc8f47dffc4\",\"urls\":[\"bzz-raw://013a7b38cce9bf8d10af9ec8b5e09be1ea6645da2e1958bf6ed8a875942ac6d6\",\"dweb:/ipfs/Qme9TC1YrXMpNHFoM8GHRjWtRWJ1LxRcYJCPSfoqY4yYri\"]},\"project:/contracts/openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xa0bb72e035727b0631aac6380e899ad48511073a3d67f1da528f845d4a3121fb\",\"urls\":[\"bzz-raw://aa3f398156da37e868c7d22967457a70aa840097c7d532b0155208a0d2dbf63f\",\"dweb:/ipfs/QmUfBdHdyzY5FzhZPC46RDsqJfaqT9oLhsknP92pYqtM2g\"]},\"project:/contracts/openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x5e7281dbd14cf07af0974ce830c6242062cd430b70658878d49b5f5c1e2ec0aa\",\"urls\":[\"bzz-raw://3c9374b456bf5fde2c473331ff75bed9c6be3634948ba6a6507e4c19c2abf605\",\"dweb:/ipfs/QmUm5NKd1ToSr8MHVVanQv3XEkQpmYKw2441KXYyXPE6np\"]},\"project:/contracts/openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x5c731061b804fa256fc8c05150eafe5d20b6bb94541a8f187912bf84f7033f34\",\"urls\":[\"bzz-raw://a3c2d9f046beebab7fb41b1b124a6a124a36f510f7c67365861402ac831bdc71\",\"dweb:/ipfs/QmUtASRgitregbKH83anopLtF9vFQe3BKeAjhUa6F7t9YV\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001b5e38038062001b5e8339810160408190526200003491620004d0565b86868181620000536301ffc9a760e01b6001600160e01b03620000f516565b6200006e6380ac58cd60e01b6001600160e01b03620000f516565b6200008963780e9d6360e01b6001600160e01b03620000f516565b81516200009e906009906020850190620003b8565b508051620000b490600a906020840190620003b8565b50620000d0635b5e139f60e01b6001600160e01b03620000f516565b50505050620000e688866200013260201b60201c565b505050505050505050620006aa565b6001600160e01b031980821614156200010d57600080fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b600080620001486001600160e01b036200018416565b600c8054600101905590506200016884826001600160e01b03620001a916565b6200017d81846001600160e01b03620001ed16565b5092915050565b6000620001a36001600c546200023160201b62000bec1790919060201c565b90505b90565b620001c082826200024d60201b62000c051760201c565b620001d582826001600160e01b036200031916565b620001e9816001600160e01b036200035716565b5050565b62000201826001600160e01b036200039b16565b6200020b57600080fd5b6000828152600b6020908152604090912082516200022c92840190620003b8565b505050565b6000828201838110156200024457600080fd5b90505b92915050565b6001600160a01b0382166200026157600080fd5b62000275816001600160e01b036200039b16565b156200028057600080fd5b600081815260016020818152604080842080546001600160a01b0319166001600160a01b03881690811790915584526003825290922054620002ce9290919062000231811b62000bec17901c565b6001600160a01b0383166000818152600360205260408082209390935591518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160a01b0390911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b6000908152600160205260409020546001600160a01b0316151590565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003fb57805160ff19168380011785556200042b565b828001600101855582156200042b579182015b828111156200042b5782518255916020019190600101906200040e565b50620004399291506200043d565b5090565b620001a691905b8082111562000439576000815560010162000444565b8051620002478162000685565b600082601f8301126200047957600080fd5b8151620004906200048a8262000618565b620005f1565b91508082526020830160208301858383011115620004ad57600080fd5b620004ba83828462000652565b50505092915050565b805162000247816200069f565b600080600080600080600080610100898b031215620004ee57600080fd5b6000620004fc8b8b6200045a565b98505060208901516001600160401b038111156200051957600080fd5b620005278b828c0162000467565b97505060408901516001600160401b038111156200054457600080fd5b620005528b828c0162000467565b96505060608901516001600160401b038111156200056f57600080fd5b6200057d8b828c0162000467565b9550506080620005908b828c01620004c3565b94505060a08901516001600160401b03811115620005ad57600080fd5b620005bb8b828c0162000467565b93505060c0620005ce8b828c01620004c3565b92505060e0620005e18b828c016200045a565b9150509295985092959890939650565b6040518181016001600160401b03811182821017156200061057600080fd5b604052919050565b60006001600160401b038211156200062f57600080fd5b506020601f91909101601f19160190565b60006001600160a01b03821662000247565b60005b838110156200066f57818101518382015260200162000655565b838111156200067f576000848401525b50505050565b620006908162000640565b81146200069c57600080fd5b50565b6200069081620001a6565b6114a480620006ba6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80634f6ccce7116100ad578063b4a5b64611610071578063b4a5b6461461024e578063b88d4fde14610256578063c87b56dd14610269578063d0def5211461027c578063e985e9c51461028f57610121565b80634f6ccce7146101fa5780636352211e1461020d57806370a082311461022057806395d89b4114610233578063a22cb4651461023b57610121565b806318160ddd116100f457806318160ddd1461019957806323b872dd146101ae5780632e1a7d4d146101c15780632f745c59146101d457806342842e0e146101e757610121565b806301ffc9a71461012657806306fdde031461014f578063081812fc14610164578063095ea7b314610184575b600080fd5b61013961013436600461121f565b6102a2565b604051610146919061132d565b60405180910390f35b6101576102c1565b604051610146919061133b565b61017761017236600461125b565b610358565b60405161014691906112db565b6101976101923660046111ef565b610388565b005b6101a1610435565b604051610146919061134c565b6101976101bc3660046110b1565b61043b565b6101976101cf36600461125b565b61045e565b6101a16101e23660046111ef565b61046a565b6101976101f53660046110b1565b6104b8565b6101a161020836600461125b565b6104d3565b61017761021b36600461125b565b610507565b6101a161022e366004611059565b610529565b61015761055a565b610197610249366004611177565b6105bb565b6101a1610640565b6101976102643660046110fe565b610646565b61015761027736600461125b565b61066c565b61013961028a3660046111a7565b61071f565b61013961029d366004611077565b610750565b6001600160e01b03191660009081526020819052604090205460ff1690565b60098054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561034d5780601f106103225761010080835404028352916020019161034d565b820191906000526020600020905b81548152906001019060200180831161033057829003601f168201915b505050505090505b90565b60006103638261077e565b61036c57600080fd5b506000908152600260205260409020546001600160a01b031690565b600061039382610507565b9050806001600160a01b0316836001600160a01b031614156103b457600080fd5b336001600160a01b03821614806103d057506103d08133610750565b6103d957600080fd5b60008281526002602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60075490565b610445338261079b565b61044e57600080fd5b6104598383836107fa565b505050565b61046781610819565b50565b600061047583610529565b821061048057600080fd5b6001600160a01b03831660009081526005602052604090208054839081106104a457fe5b906000526020600020015490505b92915050565b61045983838360405180602001604052806000815250610646565b60006104dd610435565b82106104e857600080fd5b600782815481106104f557fe5b90600052602060002001549050919050565b6000818152600160205260408120546001600160a01b0316806104b257600080fd5b60006001600160a01b03821661053e57600080fd5b506001600160a01b031660009081526003602052604090205490565b600a8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561034d5780601f106103225761010080835404028352916020019161034d565b6001600160a01b0382163314156105d157600080fd5b3360008181526004602090815260408083206001600160a01b038716808552925291829020805460ff191685151517905590519091907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319061063490859061132d565b60405180910390a35050565b600c5481565b61065184848461043b565b61065d8484848461082b565b61066657600080fd5b50505050565b60606106778261077e565b61068057600080fd5b6000828152600b602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845290918301828280156107135780601f106106e857610100808354040283529160200191610713565b820191906000526020600020905b8154815290600101906020018083116106f657829003601f168201915b50505050509050919050565b60008061072a6108f0565b600c80546001019055905061073f848261090c565b610749818461092d565b5092915050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000908152600160205260409020546001600160a01b0316151590565b6000806107a783610507565b9050806001600160a01b0316846001600160a01b031614806107e25750836001600160a01b03166107d784610358565b6001600160a01b0316145b806107f257506107f28185610750565b949350505050565b61080583838361095e565b61080f8382610a6b565b6104598282610b60565b61046761082582610507565b82610b9e565b600061083f846001600160a01b0316610be6565b61084b575060016107f2565b604051630a85bd0160e11b81526000906001600160a01b0386169063150b7a02906108809033908a90899089906004016112e9565b602060405180830381600087803b15801561089a57600080fd5b505af11580156108ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108d2919081019061123d565b6001600160e01b031916630a85bd0160e11b14915050949350505050565b600c5460009061090790600163ffffffff610bec16565b905090565b6109168282610c05565b6109208282610b60565b61092981610cb7565b5050565b6109368261077e565b61093f57600080fd5b6000828152600b60209081526040909120825161045992840190610ed2565b826001600160a01b031661097182610507565b6001600160a01b03161461098457600080fd5b6001600160a01b03821661099757600080fd5b6109a081610cfb565b6001600160a01b0383166000908152600360205260409020546109ca90600163ffffffff610d3616565b6001600160a01b038085166000908152600360205260408082209390935590841681522054610a0090600163ffffffff610bec16565b6001600160a01b038084166000818152600360209081526040808320959095558582526001905283812080546001600160a01b031916831790559251849391928716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216600090815260056020526040812054610a9590600163ffffffff610d3616565b600083815260066020526040902054909150808214610b30576001600160a01b0384166000908152600560205260408120805484908110610ad257fe5b906000526020600020015490508060056000876001600160a01b03166001600160a01b031681526020019081526020016000208381548110610b1057fe5b600091825260208083209091019290925591825260069052604090208190555b6001600160a01b0384166000908152600560205260409020805490610b59906000198301610f50565b5050505050565b6001600160a01b0390911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b610ba88282610d4b565b6000818152600b60205260409020546002600019610100600184161502019091160415610929576000818152600b6020526040812061092991610f74565b3b151590565b600082820183811015610bfe57600080fd5b9392505050565b6001600160a01b038216610c1857600080fd5b610c218161077e565b15610c2b57600080fd5b600081815260016020818152604080842080546001600160a01b0319166001600160a01b0388169081179091558452600390915290912054610c6c91610bec565b6001600160a01b0383166000818152600360205260408082209390935591518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b6000818152600260205260409020546001600160a01b03161561046757600090815260026020526040902080546001600160a01b0319169055565b600082821115610d4557600080fd5b50900390565b610d558282610d77565b610d5f8282610a6b565b60008181526006602052604081205561092981610e36565b816001600160a01b0316610d8a82610507565b6001600160a01b031614610d9d57600080fd5b610da681610cfb565b6001600160a01b038216600090815260036020526040902054610dd090600163ffffffff610d3616565b6001600160a01b0383166000818152600360209081526040808320949094558482526001905282812080546001600160a01b03191690559151839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600754600090610e4d90600163ffffffff610d3616565b60008381526008602052604081205460078054939450909284908110610e6f57fe5b906000526020600020015490508060078381548110610e8a57fe5b60009182526020808320909101929092558281526008909152604090208290556007805490610ebd906000198301610f50565b50505060009182525060086020526040812055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610f1357805160ff1916838001178555610f40565b82800160010185558215610f40579182015b82811115610f40578251825591602001919060010190610f25565b50610f4c929150610fb4565b5090565b81548183558181111561045957600083815260209020610459918101908301610fb4565b50805460018160011615610100020316600290046000825580601f10610f9a5750610467565b601f01602090049060005260206000209081019061046791905b61035591905b80821115610f4c5760008155600101610fba565b80356104b281611432565b80356104b281611446565b80356104b28161144f565b80516104b28161144f565b600082601f83011261100b57600080fd5b813561101e61101982611381565b61135a565b9150808252602083016020830185838301111561103a57600080fd5b6110458382846113f0565b50505092915050565b80356104b281611458565b60006020828403121561106b57600080fd5b60006107f28484610fce565b6000806040838503121561108a57600080fd5b60006110968585610fce565b92505060206110a785828601610fce565b9150509250929050565b6000806000606084860312156110c657600080fd5b60006110d28686610fce565b93505060206110e386828701610fce565b92505060406110f48682870161104e565b9150509250925092565b6000806000806080858703121561111457600080fd5b60006111208787610fce565b945050602061113187828801610fce565b93505060406111428782880161104e565b925050606085013567ffffffffffffffff81111561115f57600080fd5b61116b87828801610ffa565b91505092959194509250565b6000806040838503121561118a57600080fd5b60006111968585610fce565b92505060206110a785828601610fd9565b600080604083850312156111ba57600080fd5b60006111c68585610fce565b925050602083013567ffffffffffffffff8111156111e357600080fd5b6110a785828601610ffa565b6000806040838503121561120257600080fd5b600061120e8585610fce565b92505060206110a78582860161104e565b60006020828403121561123157600080fd5b60006107f28484610fe4565b60006020828403121561124f57600080fd5b60006107f28484610fef565b60006020828403121561126d57600080fd5b60006107f2848461104e565b611282816113df565b82525050565b611282816113b6565b611282816113c1565b60006112a5826113a9565b6112af81856113ad565b93506112bf8185602086016113fc565b6112c881611428565b9093019392505050565b61128281610355565b602081016104b28284611288565b608081016112f78287611279565b6113046020830186611288565b61131160408301856112d2565b8181036060830152611323818461129a565b9695505050505050565b602081016104b28284611291565b60208082528101610bfe818461129a565b602081016104b282846112d2565b60405181810167ffffffffffffffff8111828210171561137957600080fd5b604052919050565b600067ffffffffffffffff82111561139857600080fd5b506020601f91909101601f19160190565b5190565b90815260200190565b60006104b2826113d3565b151590565b6001600160e01b03191690565b6001600160a01b031690565b60006104b28260006104b2826113b6565b82818337506000910152565b60005b838110156114175781810151838201526020016113ff565b838111156106665750506000910152565b601f01601f191690565b61143b816113b6565b811461046757600080fd5b61143b816113c1565b61143b816113c6565b61143b8161035556fea365627a7a723158201b772b6af20dcf537986285d8e476ef618ad0f9a75a92312113faf78d82635776c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c80634f6ccce7116100ad578063b4a5b64611610071578063b4a5b6461461024e578063b88d4fde14610256578063c87b56dd14610269578063d0def5211461027c578063e985e9c51461028f57610121565b80634f6ccce7146101fa5780636352211e1461020d57806370a082311461022057806395d89b4114610233578063a22cb4651461023b57610121565b806318160ddd116100f457806318160ddd1461019957806323b872dd146101ae5780632e1a7d4d146101c15780632f745c59146101d457806342842e0e146101e757610121565b806301ffc9a71461012657806306fdde031461014f578063081812fc14610164578063095ea7b314610184575b600080fd5b61013961013436600461121f565b6102a2565b604051610146919061132d565b60405180910390f35b6101576102c1565b604051610146919061133b565b61017761017236600461125b565b610358565b60405161014691906112db565b6101976101923660046111ef565b610388565b005b6101a1610435565b604051610146919061134c565b6101976101bc3660046110b1565b61043b565b6101976101cf36600461125b565b61045e565b6101a16101e23660046111ef565b61046a565b6101976101f53660046110b1565b6104b8565b6101a161020836600461125b565b6104d3565b61017761021b36600461125b565b610507565b6101a161022e366004611059565b610529565b61015761055a565b610197610249366004611177565b6105bb565b6101a1610640565b6101976102643660046110fe565b610646565b61015761027736600461125b565b61066c565b61013961028a3660046111a7565b61071f565b61013961029d366004611077565b610750565b6001600160e01b03191660009081526020819052604090205460ff1690565b60098054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561034d5780601f106103225761010080835404028352916020019161034d565b820191906000526020600020905b81548152906001019060200180831161033057829003601f168201915b505050505090505b90565b60006103638261077e565b61036c57600080fd5b506000908152600260205260409020546001600160a01b031690565b600061039382610507565b9050806001600160a01b0316836001600160a01b031614156103b457600080fd5b336001600160a01b03821614806103d057506103d08133610750565b6103d957600080fd5b60008281526002602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60075490565b610445338261079b565b61044e57600080fd5b6104598383836107fa565b505050565b61046781610819565b50565b600061047583610529565b821061048057600080fd5b6001600160a01b03831660009081526005602052604090208054839081106104a457fe5b906000526020600020015490505b92915050565b61045983838360405180602001604052806000815250610646565b60006104dd610435565b82106104e857600080fd5b600782815481106104f557fe5b90600052602060002001549050919050565b6000818152600160205260408120546001600160a01b0316806104b257600080fd5b60006001600160a01b03821661053e57600080fd5b506001600160a01b031660009081526003602052604090205490565b600a8054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561034d5780601f106103225761010080835404028352916020019161034d565b6001600160a01b0382163314156105d157600080fd5b3360008181526004602090815260408083206001600160a01b038716808552925291829020805460ff191685151517905590519091907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319061063490859061132d565b60405180910390a35050565b600c5481565b61065184848461043b565b61065d8484848461082b565b61066657600080fd5b50505050565b60606106778261077e565b61068057600080fd5b6000828152600b602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845290918301828280156107135780601f106106e857610100808354040283529160200191610713565b820191906000526020600020905b8154815290600101906020018083116106f657829003601f168201915b50505050509050919050565b60008061072a6108f0565b600c80546001019055905061073f848261090c565b610749818461092d565b5092915050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000908152600160205260409020546001600160a01b0316151590565b6000806107a783610507565b9050806001600160a01b0316846001600160a01b031614806107e25750836001600160a01b03166107d784610358565b6001600160a01b0316145b806107f257506107f28185610750565b949350505050565b61080583838361095e565b61080f8382610a6b565b6104598282610b60565b61046761082582610507565b82610b9e565b600061083f846001600160a01b0316610be6565b61084b575060016107f2565b604051630a85bd0160e11b81526000906001600160a01b0386169063150b7a02906108809033908a90899089906004016112e9565b602060405180830381600087803b15801561089a57600080fd5b505af11580156108ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108d2919081019061123d565b6001600160e01b031916630a85bd0160e11b14915050949350505050565b600c5460009061090790600163ffffffff610bec16565b905090565b6109168282610c05565b6109208282610b60565b61092981610cb7565b5050565b6109368261077e565b61093f57600080fd5b6000828152600b60209081526040909120825161045992840190610ed2565b826001600160a01b031661097182610507565b6001600160a01b03161461098457600080fd5b6001600160a01b03821661099757600080fd5b6109a081610cfb565b6001600160a01b0383166000908152600360205260409020546109ca90600163ffffffff610d3616565b6001600160a01b038085166000908152600360205260408082209390935590841681522054610a0090600163ffffffff610bec16565b6001600160a01b038084166000818152600360209081526040808320959095558582526001905283812080546001600160a01b031916831790559251849391928716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216600090815260056020526040812054610a9590600163ffffffff610d3616565b600083815260066020526040902054909150808214610b30576001600160a01b0384166000908152600560205260408120805484908110610ad257fe5b906000526020600020015490508060056000876001600160a01b03166001600160a01b031681526020019081526020016000208381548110610b1057fe5b600091825260208083209091019290925591825260069052604090208190555b6001600160a01b0384166000908152600560205260409020805490610b59906000198301610f50565b5050505050565b6001600160a01b0390911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b610ba88282610d4b565b6000818152600b60205260409020546002600019610100600184161502019091160415610929576000818152600b6020526040812061092991610f74565b3b151590565b600082820183811015610bfe57600080fd5b9392505050565b6001600160a01b038216610c1857600080fd5b610c218161077e565b15610c2b57600080fd5b600081815260016020818152604080842080546001600160a01b0319166001600160a01b0388169081179091558452600390915290912054610c6c91610bec565b6001600160a01b0383166000818152600360205260408082209390935591518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b6000818152600260205260409020546001600160a01b03161561046757600090815260026020526040902080546001600160a01b0319169055565b600082821115610d4557600080fd5b50900390565b610d558282610d77565b610d5f8282610a6b565b60008181526006602052604081205561092981610e36565b816001600160a01b0316610d8a82610507565b6001600160a01b031614610d9d57600080fd5b610da681610cfb565b6001600160a01b038216600090815260036020526040902054610dd090600163ffffffff610d3616565b6001600160a01b0383166000818152600360209081526040808320949094558482526001905282812080546001600160a01b03191690559151839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600754600090610e4d90600163ffffffff610d3616565b60008381526008602052604081205460078054939450909284908110610e6f57fe5b906000526020600020015490508060078381548110610e8a57fe5b60009182526020808320909101929092558281526008909152604090208290556007805490610ebd906000198301610f50565b50505060009182525060086020526040812055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610f1357805160ff1916838001178555610f40565b82800160010185558215610f40579182015b82811115610f40578251825591602001919060010190610f25565b50610f4c929150610fb4565b5090565b81548183558181111561045957600083815260209020610459918101908301610fb4565b50805460018160011615610100020316600290046000825580601f10610f9a5750610467565b601f01602090049060005260206000209081019061046791905b61035591905b80821115610f4c5760008155600101610fba565b80356104b281611432565b80356104b281611446565b80356104b28161144f565b80516104b28161144f565b600082601f83011261100b57600080fd5b813561101e61101982611381565b61135a565b9150808252602083016020830185838301111561103a57600080fd5b6110458382846113f0565b50505092915050565b80356104b281611458565b60006020828403121561106b57600080fd5b60006107f28484610fce565b6000806040838503121561108a57600080fd5b60006110968585610fce565b92505060206110a785828601610fce565b9150509250929050565b6000806000606084860312156110c657600080fd5b60006110d28686610fce565b93505060206110e386828701610fce565b92505060406110f48682870161104e565b9150509250925092565b6000806000806080858703121561111457600080fd5b60006111208787610fce565b945050602061113187828801610fce565b93505060406111428782880161104e565b925050606085013567ffffffffffffffff81111561115f57600080fd5b61116b87828801610ffa565b91505092959194509250565b6000806040838503121561118a57600080fd5b60006111968585610fce565b92505060206110a785828601610fd9565b600080604083850312156111ba57600080fd5b60006111c68585610fce565b925050602083013567ffffffffffffffff8111156111e357600080fd5b6110a785828601610ffa565b6000806040838503121561120257600080fd5b600061120e8585610fce565b92505060206110a78582860161104e565b60006020828403121561123157600080fd5b60006107f28484610fe4565b60006020828403121561124f57600080fd5b60006107f28484610fef565b60006020828403121561126d57600080fd5b60006107f2848461104e565b611282816113df565b82525050565b611282816113b6565b611282816113c1565b60006112a5826113a9565b6112af81856113ad565b93506112bf8185602086016113fc565b6112c881611428565b9093019392505050565b61128281610355565b602081016104b28284611288565b608081016112f78287611279565b6113046020830186611288565b61131160408301856112d2565b8181036060830152611323818461129a565b9695505050505050565b602081016104b28284611291565b60208082528101610bfe818461129a565b602081016104b282846112d2565b60405181810167ffffffffffffffff8111828210171561137957600080fd5b604052919050565b600067ffffffffffffffff82111561139857600080fd5b506020601f91909101601f19160190565b5190565b90815260200190565b60006104b2826113d3565b151590565b6001600160e01b03191690565b6001600160a01b031690565b60006104b28260006104b2826113b6565b82818337506000910152565b60005b838110156114175781810151838201526020016113ff565b838111156106665750506000910152565b601f01601f191690565b61143b816113b6565b811461046757600080fd5b61143b816113c1565b61143b816113c6565b61143b8161035556fea365627a7a723158201b772b6af20dcf537986285d8e476ef618ad0f9a75a92312113faf78d82635776c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "292:1384:3:-;;;403:502;8:9:-1;5:2;;;30:1;27;20:12;5:2;403:502:3;;;;;;;;;;;;;;;;;;;;;839:8;849:10;839:8;849:10;640:40:11;-1:-1:-1;;;640:18:11;:40::i;:::-;1906::14;-1:-1:-1;;;1906:18:14;:40::i;:::-;1240:51:15;-1:-1:-1;;;1240:18:15;:51::i;:::-;738:12:17;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;760:16:17;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;864:49:17;-1:-1:-1;;;864:18:17;:49::i;:::-;666:254;;474:155:16;;876:22:3;881:5;888:9;876:4;;;:22;;:::i;:::-;;403:502;;;;;;;;292:1384;;990:158:11;-1:-1:-1;;;;;;1065:25:11;;;;;1057:34;;;;;;-1:-1:-1;;;;;;1101:33:11;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1101:40:11;-1:-1:-1;1101:40:11;;;990:158::o;1001:256:3:-;1067:4;;1133:16;:14;:16::i;:::-;1159:14;:16;;;;;;1115:34;-1:-1:-1;1185:21:3;1191:2;1115:34;1185:5;:21::i;:::-;1216:34;1229:10;1241:8;1216:12;:34::i;:::-;1001:256;;;;;:::o;1562:106::-;1605:16;1640:21;1659:1;1640:14;;:18;;;;;;:21;;;;:::i;:::-;1633:28;;1562:106;;:::o;3452:196:15:-;3515:24;3527:2;3531:7;3515:11;;;;;:24;;:::i;:::-;3550:40;3578:2;3582:7;3550:27;:40::i;:::-;3601;3633:7;3601:31;:40::i;:::-;3452:196;;:::o;1889:144:17:-;1974:16;1982:7;1974;:16::i;:::-;1966:25;;;;;;2001:19;;;;:10;:19;;;;;;;;:25;;;;;;;;:::i;:::-;;1889:144;;:::o;1431:145:13:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;-1:-1:-1;1431:145:13;;;;;:::o;8320:278:14:-;-1:-1:-1;;;;;8391:16:14;;8383:25;;;;;;8427:16;8435:7;8427;:16::i;:::-;8426:17;8418:26;;;;;;8455:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;8455:25:14;-1:-1:-1;;;;;8455:25:14;;;;;;;;8514:21;;:17;:21;;;;;;:28;;:21;;8455:11;8514:25;;;;;:28;;:::i;:::-;-1:-1:-1;;;;;8490:21:14;;;;;;:17;:21;;;;;;:52;;;;8558:33;;8583:7;;8490:21;8558:33;;8490:21;;8558:33;8320:278;;:::o;4906:183:15:-;-1:-1:-1;;;;;5019:16:15;;;;;;;;:12;:16;;;;;;;;:23;;4990:26;;;:17;:26;;;;;:52;;;5052:16;;;-1:-1:-1;23:18;;45:23;;5052:30:15;;;;;;;;4906:183::o;5284:161::-;5387:10;:17;;5360:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;5414:24:15;;;;;;;5284:161::o;7316:152:14:-;7373:4;7405:20;;;:11;:20;;;;;;-1:-1:-1;;;;;7405:20:14;7442:19;;;7316:152::o;292:1384:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;292:1384:3;;;-1:-1:-1;292:1384:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;5:134:-1;83:13;;101:33;83:13;101:33;;147:444;;260:3;253:4;245:6;241:17;237:27;227:2;;278:1;275;268:12;227:2;308:6;302:13;330:65;345:49;387:6;345:49;;;330:65;;;321:74;;415:6;408:5;401:21;451:4;443:6;439:17;484:4;477:5;473:16;519:3;510:6;505:3;501:16;498:25;495:2;;;536:1;533;526:12;495:2;546:39;578:6;573:3;568;546:39;;;220:371;;;;;;;;599:134;677:13;;695:33;677:13;695:33;;740:1616;;;;;;;;;1014:3;1002:9;993:7;989:23;985:33;982:2;;;1031:1;1028;1021:12;982:2;1066:1;1083:64;1139:7;1119:9;1083:64;;;1205:2;1190:18;;1184:25;1073:74;;-1:-1;1184:25;-1:-1;;1218:30;;1215:2;;;1261:1;1258;1251:12;1215:2;1281:74;1347:7;1338:6;1327:9;1323:22;1281:74;;;1413:2;1398:18;;1392:25;1271:84;;-1:-1;1392:25;-1:-1;;1426:30;;1423:2;;;1469:1;1466;1459:12;1423:2;1489:74;1555:7;1546:6;1535:9;1531:22;1489:74;;;1621:2;1606:18;;1600:25;1479:84;;-1:-1;1600:25;-1:-1;;1634:30;;1631:2;;;1677:1;1674;1667:12;1631:2;1697:74;1763:7;1754:6;1743:9;1739:22;1697:74;;;1687:84;;1579:198;1808:3;1827:64;1883:7;1874:6;1863:9;1859:22;1827:64;;;1949:3;1934:19;;1928:26;1817:74;;-1:-1;1928:26;-1:-1;;1963:30;;1960:2;;;2006:1;2003;1996:12;1960:2;2026:74;2092:7;2083:6;2072:9;2068:22;2026:74;;;2016:84;;1907:199;2137:3;2156:64;2212:7;2203:6;2192:9;2188:22;2156:64;;;2146:74;;2116:110;2257:3;2276:64;2332:7;2323:6;2312:9;2308:22;2276:64;;;2266:74;;2236:110;976:1380;;;;;;;;;;;;2363:256;2425:2;2419:9;2451:17;;;2547:22;;;-1:-1;2511:34;;2508:62;2505:2;;;2583:1;2580;2573:12;2505:2;2599;2592:22;2403:216;;-1:-1;2403:216;2626:322;;-1:-1;2759:30;;2756:2;;;2802:1;2799;2792:12;2756:2;-1:-1;;;2869:4;2846:17;;;;2842:33;2933:4;2923:15;;2693:255;2955:91;;-1:-1;;;;;3115:54;;3017:24;3098:76;3261:268;3326:1;3333:101;3347:6;3344:1;3341:13;3333:101;;;3414:11;;;3408:18;3395:11;;;3388:39;3369:2;3362:10;3333:101;;;3449:6;3446:1;3443:13;3440:2;;;3514:1;3505:6;3500:3;3496:16;3489:27;3440:2;3310:219;;;;;3537:117;3606:24;3624:5;3606:24;;;3599:5;3596:35;3586:2;;3645:1;3642;3635:12;3586:2;3580:74;;3661:117;3730:24;3748:5;3730:24;;3704:74;292:1384:3;;;;;;",
  "deployedSourceMap": "292:1384:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;292:1384:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;778:133:11;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1024:83:17;;;:::i;:::-;;;;;;;;3705:151:14;;;;;;;;;:::i;:::-;;;;;;;;3128:292;;;;;;;;;:::i;:::-;;2005:94:15;;;:::i;:::-;;;;;;;;5260:180:14;;;;;;;;;:::i;1258:65:3:-;;;;;;;;;:::i;1671:182:15:-;;;;;;;;;:::i;6079:132:14:-;;;;;;;;;:::i;2436:148:15:-;;;;;;;;;:::i;2530:177:14:-;;;;;;;;;:::i;2156:150::-;;;;;;;;;:::i;1215:87:17:-;;;:::i;4148:213:14:-;;;;;;;;;:::i;363:29:3:-;;;:::i;6916:211:14:-;;;;;;;;;:::i;1501:151:17:-;;;;;;;;;:::i;1001:256:3:-;;;;;;;;;:::i;4682:145:14:-;;;;;;;;;:::i;778:133:11:-;-1:-1:-1;;;;;;871:33:11;848:4;871:33;;;;;;;;;;;;;;778:133::o;1024:83:17:-;1095:5;1088:12;;;;;;;;;;;;;-1:-1:-1;;1088:12:17;;;;;;;;;;;;;;;;;;;;;;;;;;1063:13;;1088:12;;1095:5;;1088:12;;;1095:5;1088:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1024:83;;:::o;3705:151:14:-;3764:7;3791:16;3799:7;3791;:16::i;:::-;3783:25;;;;;;-1:-1:-1;3825:24:14;;;;:15;:24;;;;;;-1:-1:-1;;;;;3825:24:14;;3705:151::o;3128:292::-;3191:13;3207:16;3215:7;3207;:16::i;:::-;3191:32;-1:-1:-1;;;;;;3241:11:14;;;;;;;;3233:20;;;;;;-1:-1:-1;;;;;3271:19:14;;:10;:19;;:58;;;3294:35;3311:5;3318:10;3294:16;:35::i;:::-;3263:67;;;;;;3341:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;3341:29:14;-1:-1:-1;;;;;3341:29:14;;;;;;;;;3385:28;;3341:24;;3385:28;;;;;;;3128:292;;;:::o;2005:94:15:-;2075:10;:17;2005:94;:::o;5260:180:14:-;5350:39;5369:10;5381:7;5350:18;:39::i;:::-;5342:48;;;;;;5401:32;5415:4;5421:2;5425:7;5401:13;:32::i;:::-;5260:180;;;:::o;1258:65:3:-;1306:14;1312:7;1306:5;:14::i;:::-;1258:65;:::o;1671:182:15:-;1751:7;1786:16;1796:5;1786:9;:16::i;:::-;1778:5;:24;1770:33;;;;;;-1:-1:-1;;;;;1820:19:15;;;;;;:12;:19;;;;;:26;;1840:5;;1820:26;;;;;;;;;;;;;;1813:33;;1671:182;;;;;:::o;6079:132:14:-;6165:39;6182:4;6188:2;6192:7;6165:39;;;;;;;;;;;;:16;:39::i;2436:148:15:-;2494:7;2529:13;:11;:13::i;:::-;2521:5;:21;2513:30;;;;;;2560:10;2571:5;2560:17;;;;;;;;;;;;;;;;2553:24;;2436:148;;;:::o;2530:177:14:-;2585:7;2620:20;;;:11;:20;;;;;;-1:-1:-1;;;;;2620:20:14;;2650:28;;;;;2156:150;2211:7;-1:-1:-1;;;;;2238:19:14;;2230:28;;;;;;-1:-1:-1;;;;;;2275:24:14;;;;;:17;:24;;;;;;;2156:150::o;1215:87:17:-;1288:7;1281:14;;;;;;;;;;;;;-1:-1:-1;;1281:14:17;;;;;;;;;;;;;;;;;;;;;;;;;;1256:13;;1281:14;;1288:7;;1281:14;;;1288:7;1281:14;;;;;;;;;;;;;;;;;;;;;;;;4148:213:14;4233:10;-1:-1:-1;;;;;4227:16:14;;;;4219:25;;;;;;4273:10;4254:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;4254:34:14;;;;;;;;;;;:45;;-1:-1:-1;;4254:45:14;;;;;;;4314:40;;4254:34;;4273:10;4314:40;;;;4254:45;;4314:40;;;;;;;;;;4148:213;;:::o;363:29:3:-;;;;:::o;6916:211:14:-;7022:31;7035:4;7041:2;7045:7;7022:12;:31::i;:::-;7071:48;7094:4;7100:2;7104:7;7113:5;7071:22;:48::i;:::-;7063:57;;;;;;6916:211;;;;:::o;1501:151:17:-;1559:13;1592:16;1600:7;1592;:16::i;:::-;1584:25;;;;;;1626:19;;;;:10;:19;;;;;;;;;1619:26;;;;;;;;;;;-1:-1:-1;;1619:26:17;;;;;;;;;;;;;;;;;;;;;;;;;;;1626:19;;1619:26;;1626:19;1619:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1501:151;;;:::o;1001:256:3:-;1067:4;1115:15;1133:16;:14;:16::i;:::-;1159:14;:16;;;;;;1115:34;-1:-1:-1;1185:21:3;1191:2;1115:34;1185:5;:21::i;:::-;1216:34;1229:10;1241:8;1216:12;:34::i;:::-;1001:256;;;;;:::o;4682:145:14:-;-1:-1:-1;;;;;4785:25:14;;;4762:4;4785:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4682:145::o;7316:152::-;7373:4;7405:20;;;:11;:20;;;;;;-1:-1:-1;;;;;7405:20:14;7442:19;;;7316:152::o;7831:246::-;7916:4;7932:13;7948:16;7956:7;7948;:16::i;:::-;7932:32;-1:-1:-1;;;;;;7982:16:14;;;;;;;;:51;;-1:-1:-1;;;;;;8002:31:14;;:20;8014:7;8002:11;:20::i;:::-;-1:-1:-1;;;;;8002:31:14;;7982:51;:87;;;;8037:32;8054:5;8061:7;8037:16;:32::i;:::-;7974:96;7831:246;-1:-1:-1;;;;7831:246:14:o;2958:239:15:-;3043:38;3063:4;3069:2;3073:7;3043:19;:38::i;:::-;3092:47;3125:4;3131:7;3092:32;:47::i;:::-;3150:40;3178:2;3182:7;3150:27;:40::i;9355:90:14:-;9406:32;9412:16;9420:7;9412;:16::i;:::-;9430:7;9406:5;:32::i;10744:347::-;10865:4;10890:15;-1:-1:-1;;;;;10890:13:14;;;:15::i;:::-;10885:58;;-1:-1:-1;10928:4:14;10921:11;;10885:58;10969:70;;-1:-1:-1;;;10969:70:14;;10953:13;;-1:-1:-1;;;;;10969:36:14;;;;;:70;;11006:10;;11018:4;;11024:7;;11033:5;;10969:70;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10969:70:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10969:70:14;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10969:70:14;;;;;;;;;-1:-1:-1;;;;;;11057:26:14;-1:-1:-1;;;11057:26:14;;;-1:-1:-1;;;;;;10744:347:14:o;1562:106:3:-;1640:14;;1605:16;;1640:21;;1659:1;1640:21;:18;:21;:::i;:::-;1633:28;;1562:106;:::o;3452:196:15:-;3515:24;3527:2;3531:7;3515:11;:24::i;:::-;3550:40;3578:2;3582:7;3550:27;:40::i;:::-;3601;3633:7;3601:31;:40::i;:::-;3452:196;;:::o;1889:144:17:-;1974:16;1982:7;1974;:16::i;:::-;1966:25;;;;;;2001:19;;;;:10;:19;;;;;;;;:25;;;;;;;;:::i;9819:402:14:-;-1:-1:-1;;;;;9912:24:14;;:16;9920:7;9912;:16::i;:::-;-1:-1:-1;;;;;9912:24:14;;9904:33;;;;;;-1:-1:-1;;;;;9955:16:14;;9947:25;;;;;;9983:23;9998:7;9983:14;:23::i;:::-;-1:-1:-1;;;;;10043:23:14;;;;;;:17;:23;;;;;;:30;;-1:-1:-1;10043:27:14;:30::i;:::-;-1:-1:-1;;;;;10017:23:14;;;;;;;:17;:23;;;;;;:56;;;;10107:21;;;;;;;:28;;-1:-1:-1;10107:25:14;:28::i;:::-;-1:-1:-1;;;;;10083:21:14;;;;;;;:17;:21;;;;;;;;:52;;;;10146:20;;;-1:-1:-1;10146:20:14;;;;;:25;;-1:-1:-1;;;;;;10146:25:14;;;;;10187:27;;10146:20;;10083:21;;10187:27;;;;;;9819:402;;;:::o;6060:1128:15:-;-1:-1:-1;;;;;6347:18:15;;6322:22;6347:18;;;:12;:18;;;;;:25;:32;;-1:-1:-1;6347:29:15;:32::i;:::-;6389:18;6410:26;;;:17;:26;;;;;;6322:57;;-1:-1:-1;6540:28:15;;;6536:323;;-1:-1:-1;;;;;6606:18:15;;6584:19;6606:18;;;:12;:18;;;;;:34;;6625:14;;6606:34;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6655:18:15;;;;:12;:18;;;;;;;:30;;6606:34;;-1:-1:-1;6606:34:15;;6674:10;;6655:30;;;;;;;;;;;;;;;;;:44;;;;6771:30;;;:17;:30;;;;;:43;;;6536:323;-1:-1:-1;;;;;6945:18:15;;;;;;:12;:18;;;;;:27;;;;;-1:-1:-1;;6945:27:15;;;:::i;:::-;;6060:1128;;;;:::o;4906:183::-;-1:-1:-1;;;;;5019:16:15;;;;;;;;:12;:16;;;;;;;;:23;;4990:26;;;:17;:26;;;;;:52;;;5052:16;;;-1:-1:-1;23:18;;45:23;;5052:30:15;;;;;;;;4906:183::o;2323:240:17:-;2389:27;2401:5;2408:7;2389:11;:27::i;:::-;2472:19;;;;:10;:19;;;;;2466:33;;;;;;;;-1:-1:-1;;2466:33:17;;;;;:38;2462:95;;2527:19;;;;:10;:19;;;;;2520:26;;;:::i;463:616:22:-;1026:20;1064:8;;;463:616::o;1431:145:13:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;1431:145;-1:-1:-1;;;1431:145:13:o;8320:278:14:-;-1:-1:-1;;;;;8391:16:14;;8383:25;;;;;;8427:16;8435:7;8427;:16::i;:::-;8426:17;8418:26;;;;;;8455:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;8455:25:14;-1:-1:-1;;;;;8455:25:14;;;;;;;;8514:21;;:17;:21;;;;;;;:28;;:25;:28::i;:::-;-1:-1:-1;;;;;8490:21:14;;;;;;:17;:21;;;;;;:52;;;;8558:33;;8583:7;;8490:21;8558:33;;8490:21;;8558:33;8320:278;;:::o;5284:161:15:-;5387:10;:17;;5360:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;5414:24:15;;;;;;;5284:161::o;11252:171:14:-;11351:1;11315:24;;;:15;:24;;;;;;-1:-1:-1;;;;;11315:24:14;:38;11311:106;;11404:1;11369:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;11369:37:14;;;11252:171::o;1205:145:13:-;1263:7;1295:1;1290;:6;;1282:15;;;;;;-1:-1:-1;1319:5:13;;;1205:145::o;3920:364:15:-;3986:27;3998:5;4005:7;3986:11;:27::i;:::-;4024:48;4057:5;4064:7;4024:32;:48::i;:::-;4220:1;4191:26;;;:17;:26;;;;;:30;4232:45;4209:7;4232:36;:45::i;8871:305:14:-;-1:-1:-1;;;;;8945:25:14;;:16;8953:7;8945;:16::i;:::-;-1:-1:-1;;;;;8945:25:14;;8937:34;;;;;;8982:23;8997:7;8982:14;:23::i;:::-;-1:-1:-1;;;;;9043:24:14;;;;;;:17;:24;;;;;;:31;;-1:-1:-1;9043:28:14;:31::i;:::-;-1:-1:-1;;;;;9016:24:14;;;;;;:17;:24;;;;;;;;:58;;;;9084:20;;;-1:-1:-1;9084:20:14;;;;;:33;;-1:-1:-1;;;;;;9084:33:14;;;9133:36;;9084:20;;9016:24;;9133:36;;9016:24;;9133:36;8871:305;;:::o;7476:1064:15:-;7750:10;:17;7725:22;;7750:24;;7772:1;7750:24;:21;:24;:::i;:::-;7784:18;7805:24;;;:15;:24;;;;;;8173:10;:26;;7725:49;;-1:-1:-1;7805:24:15;;7725:49;;8173:26;;;;;;;;;;;;;;8151:48;;8235:11;8210:10;8221;8210:22;;;;;;;;;;;;;;;;;;;:36;;;;8314:28;;;:15;:28;;;;;;:41;;;8476:10;:19;;;;;-1:-1:-1;;8476:19:15;;;:::i;:::-;-1:-1:-1;;;8532:1:15;8505:24;;;-1:-1:-1;8505:15:15;:24;;;;;:28;7476:1064::o;292:1384:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;292:1384:3;;;-1:-1:-1;292:1384:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:130:-1;72:20;;97:33;72:20;97:33;;142:124;206:20;;231:30;206:20;231:30;;273:128;339:20;;364:32;339:20;364:32;;408:132;485:13;;503:32;485:13;503:32;;548:440;;649:3;642:4;634:6;630:17;626:27;616:2;;667:1;664;657:12;616:2;704:6;691:20;726:64;741:48;782:6;741:48;;;726:64;;;717:73;;810:6;803:5;796:21;846:4;838:6;834:17;879:4;872:5;868:16;914:3;905:6;900:3;896:16;893:25;890:2;;;931:1;928;921:12;890:2;941:41;975:6;970:3;965;941:41;;;609:379;;;;;;;;1447:130;1514:20;;1539:33;1514:20;1539:33;;1584:241;;1688:2;1676:9;1667:7;1663:23;1659:32;1656:2;;;1704:1;1701;1694:12;1656:2;1739:1;1756:53;1801:7;1781:9;1756:53;;1832:366;;;1953:2;1941:9;1932:7;1928:23;1924:32;1921:2;;;1969:1;1966;1959:12;1921:2;2004:1;2021:53;2066:7;2046:9;2021:53;;;2011:63;;1983:97;2111:2;2129:53;2174:7;2165:6;2154:9;2150:22;2129:53;;;2119:63;;2090:98;1915:283;;;;;;2205:491;;;;2343:2;2331:9;2322:7;2318:23;2314:32;2311:2;;;2359:1;2356;2349:12;2311:2;2394:1;2411:53;2456:7;2436:9;2411:53;;;2401:63;;2373:97;2501:2;2519:53;2564:7;2555:6;2544:9;2540:22;2519:53;;;2509:63;;2480:98;2609:2;2627:53;2672:7;2663:6;2652:9;2648:22;2627:53;;;2617:63;;2588:98;2305:391;;;;;;2703:721;;;;;2867:3;2855:9;2846:7;2842:23;2838:33;2835:2;;;2884:1;2881;2874:12;2835:2;2919:1;2936:53;2981:7;2961:9;2936:53;;;2926:63;;2898:97;3026:2;3044:53;3089:7;3080:6;3069:9;3065:22;3044:53;;;3034:63;;3005:98;3134:2;3152:53;3197:7;3188:6;3177:9;3173:22;3152:53;;;3142:63;;3113:98;3270:2;3259:9;3255:18;3242:32;3294:18;3286:6;3283:30;3280:2;;;3326:1;3323;3316:12;3280:2;3346:62;3400:7;3391:6;3380:9;3376:22;3346:62;;;3336:72;;3221:193;2829:595;;;;;;;;3431:360;;;3549:2;3537:9;3528:7;3524:23;3520:32;3517:2;;;3565:1;3562;3555:12;3517:2;3600:1;3617:53;3662:7;3642:9;3617:53;;;3607:63;;3579:97;3707:2;3725:50;3767:7;3758:6;3747:9;3743:22;3725:50;;3798:472;;;3929:2;3917:9;3908:7;3904:23;3900:32;3897:2;;;3945:1;3942;3935:12;3897:2;3980:1;3997:53;4042:7;4022:9;3997:53;;;3987:63;;3959:97;4115:2;4104:9;4100:18;4087:32;4139:18;4131:6;4128:30;4125:2;;;4171:1;4168;4161:12;4125:2;4191:63;4246:7;4237:6;4226:9;4222:22;4191:63;;4277:366;;;4398:2;4386:9;4377:7;4373:23;4369:32;4366:2;;;4414:1;4411;4404:12;4366:2;4449:1;4466:53;4511:7;4491:9;4466:53;;;4456:63;;4428:97;4556:2;4574:53;4619:7;4610:6;4599:9;4595:22;4574:53;;4650:239;;4753:2;4741:9;4732:7;4728:23;4724:32;4721:2;;;4769:1;4766;4759:12;4721:2;4804:1;4821:52;4865:7;4845:9;4821:52;;4896:261;;5010:2;4998:9;4989:7;4985:23;4981:32;4978:2;;;5026:1;5023;5016:12;4978:2;5061:1;5078:63;5133:7;5113:9;5078:63;;5164:241;;5268:2;5256:9;5247:7;5243:23;5239:32;5236:2;;;5284:1;5281;5274:12;5236:2;5319:1;5336:53;5381:7;5361:9;5336:53;;5412:142;5503:45;5542:5;5503:45;;;5498:3;5491:58;5485:69;;;5561:113;5644:24;5662:5;5644:24;;5681:104;5758:21;5773:5;5758:21;;5792:343;;5902:38;5934:5;5902:38;;;5952:70;6015:6;6010:3;5952:70;;;5945:77;;6027:52;6072:6;6067:3;6060:4;6053:5;6049:16;6027:52;;;6100:29;6122:6;6100:29;;;6091:39;;;;5882:253;-1:-1;;;5882:253;6496:113;6579:24;6597:5;6579:24;;6616:213;6734:2;6719:18;;6748:71;6723:9;6792:6;6748:71;;6836:647;7064:3;7049:19;;7079:79;7053:9;7131:6;7079:79;;;7169:72;7237:2;7226:9;7222:18;7213:6;7169:72;;;7252;7320:2;7309:9;7305:18;7296:6;7252:72;;;7372:9;7366:4;7362:20;7357:2;7346:9;7342:18;7335:48;7397:76;7468:4;7459:6;7397:76;;;7389:84;7035:448;-1:-1;;;;;;7035:448;7490:201;7602:2;7587:18;;7616:65;7591:9;7654:6;7616:65;;7698:301;7836:2;7850:47;;;7821:18;;7911:78;7821:18;7975:6;7911:78;;8006:213;8124:2;8109:18;;8138:71;8113:9;8182:6;8138:71;;8226:256;8288:2;8282:9;8314:17;;;8389:18;8374:34;;8410:22;;;8371:62;8368:2;;;8446:1;8443;8436:12;8368:2;8462;8455:22;8266:216;;-1:-1;8266:216;8489:321;;8632:18;8624:6;8621:30;8618:2;;;8664:1;8661;8654:12;8618:2;-1:-1;;;8731:4;8708:17;;;;8704:33;8795:4;8785:15;;8555:255;9146:121;9233:12;;9204:63;9404:162;9506:19;;;9555:4;9546:14;;9499:67;9746:91;;9808:24;9826:5;9808:24;;9844:85;9910:13;9903:21;;9886:43;9936:144;-1:-1;;;;;;9997:78;;9980:100;10087:121;-1:-1;;;;;10149:54;;10132:76;10294:129;;10381:37;10412:5;10430:121;10509:37;10540:5;10509:37;;10674:145;10755:6;10750:3;10745;10732:30;-1:-1;10811:1;10793:16;;10786:27;10725:94;10828:268;10893:1;10900:101;10914:6;10911:1;10908:13;10900:101;;;10981:11;;;10975:18;10962:11;;;10955:39;10936:2;10929:10;10900:101;;;11016:6;11013:1;11010:13;11007:2;;;-1:-1;;11081:1;11063:16;;11056:27;10877:219;11104:97;11192:2;11172:14;-1:-1;;11168:28;;11152:49;11209:117;11278:24;11296:5;11278:24;;;11271:5;11268:35;11258:2;;11317:1;11314;11307:12;11333:111;11399:21;11414:5;11399:21;;11451:115;11519:23;11536:5;11519:23;;11573:117;11642:24;11660:5;11642:24;",
  "source": "pragma solidity ^0.5.16;\npragma experimental ABIEncoderV2;\n\nimport { ERC721Full } from \"./openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol\";\nimport { SafeMath } from \"./openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\n\n/**\n * @notice - This is the NFT contract for a photo\n */\ncontract PhotoNFT is ERC721Full {\n    using SafeMath for uint256;\n\n    uint256 public currentPhotoId;\n    \n    constructor(\n        address owner,  /// Initial owner (Seller)\n        string memory _nftName, \n        string memory _nftSymbol,\n        string memory _tokenURI, // [Note]: TokenURI is URL include ipfs hash\n        \n        uint photoPrice,\n        // string memory typeOfSale,\n           string memory  adressEmail,\n        uint redevance,\n        address seller\n     \n        //add typeBuy\n    ) \n        public \n        ERC721Full(_nftName, _nftSymbol) \n    {\n        mint(owner, _tokenURI);\n    }\n\n    /** \n     * @dev mint a photoNFT\n     * @dev tokenURI - URL include ipfs hash\n     */\n    function mint(address to, string memory tokenURI) public returns (bool) {\n        /// Mint a new PhotoNFT\n        uint newPhotoId = getNextPhotoId();\n        currentPhotoId++;\n        _mint(to, newPhotoId);\n        _setTokenURI(newPhotoId, tokenURI);\n    }\nfunction withdraw(uint256 tokenId) public {\n    _burn(tokenId);\n}\n\n    ///--------------------------------------\n    /// Getter methods\n    ///--------------------------------------\n\n\n    ///--------------------------------------\n    /// Private methods\n    ///--------------------------------------\n    function getNextPhotoId() private returns (uint nextPhotoId) {\n        return currentPhotoId.add(1);\n    }\n    \n\n}\n",
  "sourcePath": "/Users/amal/Documents/NFT-based-photo-marketplace/oldversion/contracts/PhotoNFT.sol",
  "ast": {
    "absolutePath": "project:/contracts/PhotoNFT.sol",
    "exportedSymbols": {
      "PhotoNFT": [
        1073
      ]
    },
    "id": 1074,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 982,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "id": 983,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:3"
      },
      {
        "absolutePath": "project:/contracts/openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "file": "./openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "id": 985,
        "nodeType": "ImportDirective",
        "scope": 1074,
        "sourceUnit": 3739,
        "src": "60:91:3",
        "symbolAliases": [
          {
            "foreign": 984,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "./openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 987,
        "nodeType": "ImportDirective",
        "scope": 1074,
        "sourceUnit": 2821,
        "src": "152:79:3",
        "symbolAliases": [
          {
            "foreign": 986,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 988,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3738,
              "src": "313:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$3738",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 989,
            "nodeType": "InheritanceSpecifier",
            "src": "313:10:3"
          }
        ],
        "contractDependencies": [
          2682,
          2692,
          3379,
          3714,
          3738,
          3865,
          3968,
          3995,
          4018
        ],
        "contractKind": "contract",
        "documentation": "@notice - This is the NFT contract for a photo",
        "fullyImplemented": true,
        "id": 1073,
        "linearizedBaseContracts": [
          1073,
          3738,
          3865,
          4018,
          3714,
          3995,
          3379,
          3968,
          2682,
          2692
        ],
        "name": "PhotoNFT",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 992,
            "libraryName": {
              "contractScope": null,
              "id": 990,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2820,
              "src": "336:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2820",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "330:27:3",
            "typeName": {
              "id": 991,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "349:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 994,
            "name": "currentPhotoId",
            "nodeType": "VariableDeclaration",
            "scope": 1073,
            "src": "363:29:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 993,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "363:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1022,
              "nodeType": "Block",
              "src": "866:39:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1018,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 996,
                        "src": "881:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1019,
                        "name": "_tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1002,
                        "src": "888:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1017,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1051,
                      "src": "876:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,string memory) returns (bool)"
                      }
                    },
                    "id": 1020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "876:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1021,
                  "nodeType": "ExpressionStatement",
                  "src": "876:22:3"
                }
              ]
            },
            "documentation": null,
            "id": 1023,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1013,
                    "name": "_nftName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 998,
                    "src": "839:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1014,
                    "name": "_nftSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1000,
                    "src": "849:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1015,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1012,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3738,
                  "src": "828:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$3738_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "828:32:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 996,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "424:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 995,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "424:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 998,
                  "name": "_nftName",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "475:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 997,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "475:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1000,
                  "name": "_nftSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "508:24:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 999,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "508:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1002,
                  "name": "_tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "542:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1001,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "542:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1004,
                  "name": "photoPrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "629:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1003,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "629:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1006,
                  "name": "adressEmail",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "694:26:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1005,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "694:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1008,
                  "name": "redevance",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "730:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1007,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "730:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1010,
                  "name": "seller",
                  "nodeType": "VariableDeclaration",
                  "scope": 1023,
                  "src": "754:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1009,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "754:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "414:388:3"
            },
            "returnParameters": {
              "id": 1016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "866:0:3"
            },
            "scope": 1073,
            "src": "403:502:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1050,
              "nodeType": "Block",
              "src": "1073:184:3",
              "statements": [
                {
                  "assignments": [
                    1033
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1033,
                      "name": "newPhotoId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1050,
                      "src": "1115:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1032,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1115:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1036,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1034,
                      "name": "getNextPhotoId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1072,
                      "src": "1133:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 1035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1133:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1115:34:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1159:16:3",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 1037,
                      "name": "currentPhotoId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 994,
                      "src": "1159:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1039,
                  "nodeType": "ExpressionStatement",
                  "src": "1159:16:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1041,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1025,
                        "src": "1191:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1042,
                        "name": "newPhotoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1033,
                        "src": "1195:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1040,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3521
                      ],
                      "referencedDeclaration": 3521,
                      "src": "1185:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1185:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1044,
                  "nodeType": "ExpressionStatement",
                  "src": "1185:21:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1046,
                        "name": "newPhotoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1033,
                        "src": "1229:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1047,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1027,
                        "src": "1241:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1045,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3834,
                      "src": "1216:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 1048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1216:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1049,
                  "nodeType": "ExpressionStatement",
                  "src": "1216:34:3"
                }
              ]
            },
            "documentation": "@dev mint a photoNFT\n@dev tokenURI - URL include ipfs hash",
            "id": 1051,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1025,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1051,
                  "src": "1015:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1024,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1015:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1027,
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 1051,
                  "src": "1027:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1026,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1027:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1014:36:3"
            },
            "returnParameters": {
              "id": 1031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1030,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1051,
                  "src": "1067:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1029,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1067:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1066:6:3"
            },
            "scope": 1073,
            "src": "1001:256:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1060,
              "nodeType": "Block",
              "src": "1300:23:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1057,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1053,
                        "src": "1312:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1056,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3864,
                        3251
                      ],
                      "referencedDeclaration": 3251,
                      "src": "1306:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1306:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1059,
                  "nodeType": "ExpressionStatement",
                  "src": "1306:14:3"
                }
              ]
            },
            "documentation": null,
            "id": 1061,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1053,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1061,
                  "src": "1276:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1052,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1276:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1275:17:3"
            },
            "returnParameters": {
              "id": 1055,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1300:0:3"
            },
            "scope": 1073,
            "src": "1258:65:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1071,
              "nodeType": "Block",
              "src": "1623:45:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1659:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1066,
                        "name": "currentPhotoId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 994,
                        "src": "1640:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2799,
                      "src": "1640:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1640:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1065,
                  "id": 1070,
                  "nodeType": "Return",
                  "src": "1633:28:3"
                }
              ]
            },
            "documentation": "--------------------------------------\n Getter methods\n--------------------------------------\n--------------------------------------\n Private methods\n--------------------------------------",
            "id": 1072,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNextPhotoId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1062,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1585:2:3"
            },
            "returnParameters": {
              "id": 1065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1064,
                  "name": "nextPhotoId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1072,
                  "src": "1605:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1063,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1605:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1604:18:3"
            },
            "scope": 1073,
            "src": "1562:106:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 1074,
        "src": "292:1384:3"
      }
    ],
    "src": "0:1677:3"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/PhotoNFT.sol",
      "exportedSymbols": {
        "PhotoNFT": [
          1073
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".16"
          ]
        },
        "id": 982,
        "name": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 983,
        "name": "PragmaDirective",
        "src": "25:33:3"
      },
      {
        "attributes": {
          "SourceUnit": 3739,
          "absolutePath": "project:/contracts/openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
          "file": "./openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
          "scope": 1074,
          "symbolAliases": [
            {
              "foreign": 984,
              "local": null
            }
          ],
          "unitAlias": ""
        },
        "id": 985,
        "name": "ImportDirective",
        "src": "60:91:3"
      },
      {
        "attributes": {
          "SourceUnit": 2821,
          "absolutePath": "project:/contracts/openzeppelin-solidity/contracts/math/SafeMath.sol",
          "file": "./openzeppelin-solidity/contracts/math/SafeMath.sol",
          "scope": 1074,
          "symbolAliases": [
            {
              "foreign": 986,
              "local": null
            }
          ],
          "unitAlias": ""
        },
        "id": 987,
        "name": "ImportDirective",
        "src": "152:79:3"
      },
      {
        "attributes": {
          "contractDependencies": [
            2682,
            2692,
            3379,
            3714,
            3738,
            3865,
            3968,
            3995,
            4018
          ],
          "contractKind": "contract",
          "documentation": "@notice - This is the NFT contract for a photo",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1073,
            3738,
            3865,
            4018,
            3714,
            3995,
            3379,
            3968,
            2682,
            2692
          ],
          "name": "PhotoNFT",
          "scope": 1074
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Full",
                  "referencedDeclaration": 3738,
                  "type": "contract ERC721Full"
                },
                "id": 988,
                "name": "UserDefinedTypeName",
                "src": "313:10:3"
              }
            ],
            "id": 989,
            "name": "InheritanceSpecifier",
            "src": "313:10:3"
          },
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SafeMath",
                  "referencedDeclaration": 2820,
                  "type": "library SafeMath"
                },
                "id": 990,
                "name": "UserDefinedTypeName",
                "src": "336:8:3"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 991,
                "name": "ElementaryTypeName",
                "src": "349:7:3"
              }
            ],
            "id": 992,
            "name": "UsingForDirective",
            "src": "330:27:3"
          },
          {
            "attributes": {
              "constant": false,
              "name": "currentPhotoId",
              "scope": 1073,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 993,
                "name": "ElementaryTypeName",
                "src": "363:7:3"
              }
            ],
            "id": 994,
            "name": "VariableDeclaration",
            "src": "363:29:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 1073,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "owner",
                      "scope": 1023,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 995,
                        "name": "ElementaryTypeName",
                        "src": "424:7:3"
                      }
                    ],
                    "id": 996,
                    "name": "VariableDeclaration",
                    "src": "424:13:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_nftName",
                      "scope": 1023,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 997,
                        "name": "ElementaryTypeName",
                        "src": "475:6:3"
                      }
                    ],
                    "id": 998,
                    "name": "VariableDeclaration",
                    "src": "475:22:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_nftSymbol",
                      "scope": 1023,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 999,
                        "name": "ElementaryTypeName",
                        "src": "508:6:3"
                      }
                    ],
                    "id": 1000,
                    "name": "VariableDeclaration",
                    "src": "508:24:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_tokenURI",
                      "scope": 1023,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1001,
                        "name": "ElementaryTypeName",
                        "src": "542:6:3"
                      }
                    ],
                    "id": 1002,
                    "name": "VariableDeclaration",
                    "src": "542:23:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "photoPrice",
                      "scope": 1023,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 1003,
                        "name": "ElementaryTypeName",
                        "src": "629:4:3"
                      }
                    ],
                    "id": 1004,
                    "name": "VariableDeclaration",
                    "src": "629:15:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "adressEmail",
                      "scope": 1023,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1005,
                        "name": "ElementaryTypeName",
                        "src": "694:6:3"
                      }
                    ],
                    "id": 1006,
                    "name": "VariableDeclaration",
                    "src": "694:26:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "redevance",
                      "scope": 1023,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 1007,
                        "name": "ElementaryTypeName",
                        "src": "730:4:3"
                      }
                    ],
                    "id": 1008,
                    "name": "VariableDeclaration",
                    "src": "730:14:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "seller",
                      "scope": 1023,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1009,
                        "name": "ElementaryTypeName",
                        "src": "754:7:3"
                      }
                    ],
                    "id": 1010,
                    "name": "VariableDeclaration",
                    "src": "754:14:3"
                  }
                ],
                "id": 1011,
                "name": "ParameterList",
                "src": "414:388:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1016,
                "name": "ParameterList",
                "src": "866:0:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3738,
                      "type": "type(contract ERC721Full)",
                      "value": "ERC721Full"
                    },
                    "id": 1012,
                    "name": "Identifier",
                    "src": "828:10:3"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 998,
                      "type": "string memory",
                      "value": "_nftName"
                    },
                    "id": 1013,
                    "name": "Identifier",
                    "src": "839:8:3"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1000,
                      "type": "string memory",
                      "value": "_nftSymbol"
                    },
                    "id": 1014,
                    "name": "Identifier",
                    "src": "849:10:3"
                  }
                ],
                "id": 1015,
                "name": "ModifierInvocation",
                "src": "828:32:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1051,
                              "type": "function (address,string memory) returns (bool)",
                              "value": "mint"
                            },
                            "id": 1017,
                            "name": "Identifier",
                            "src": "876:4:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 996,
                              "type": "address",
                              "value": "owner"
                            },
                            "id": 1018,
                            "name": "Identifier",
                            "src": "881:5:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1002,
                              "type": "string memory",
                              "value": "_tokenURI"
                            },
                            "id": 1019,
                            "name": "Identifier",
                            "src": "888:9:3"
                          }
                        ],
                        "id": 1020,
                        "name": "FunctionCall",
                        "src": "876:22:3"
                      }
                    ],
                    "id": 1021,
                    "name": "ExpressionStatement",
                    "src": "876:22:3"
                  }
                ],
                "id": 1022,
                "name": "Block",
                "src": "866:39:3"
              }
            ],
            "id": 1023,
            "name": "FunctionDefinition",
            "src": "403:502:3"
          },
          {
            "attributes": {
              "documentation": "@dev mint a photoNFT\n@dev tokenURI - URL include ipfs hash",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "scope": 1073,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "scope": 1051,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1024,
                        "name": "ElementaryTypeName",
                        "src": "1015:7:3"
                      }
                    ],
                    "id": 1025,
                    "name": "VariableDeclaration",
                    "src": "1015:10:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenURI",
                      "scope": 1051,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1026,
                        "name": "ElementaryTypeName",
                        "src": "1027:6:3"
                      }
                    ],
                    "id": 1027,
                    "name": "VariableDeclaration",
                    "src": "1027:22:3"
                  }
                ],
                "id": 1028,
                "name": "ParameterList",
                "src": "1014:36:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 1051,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 1029,
                        "name": "ElementaryTypeName",
                        "src": "1067:4:3"
                      }
                    ],
                    "id": 1030,
                    "name": "VariableDeclaration",
                    "src": "1067:4:3"
                  }
                ],
                "id": 1031,
                "name": "ParameterList",
                "src": "1066:6:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        1033
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "newPhotoId",
                          "scope": 1050,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 1032,
                            "name": "ElementaryTypeName",
                            "src": "1115:4:3"
                          }
                        ],
                        "id": 1033,
                        "name": "VariableDeclaration",
                        "src": "1115:15:3"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1072,
                              "type": "function () returns (uint256)",
                              "value": "getNextPhotoId"
                            },
                            "id": 1034,
                            "name": "Identifier",
                            "src": "1133:14:3"
                          }
                        ],
                        "id": 1035,
                        "name": "FunctionCall",
                        "src": "1133:16:3"
                      }
                    ],
                    "id": 1036,
                    "name": "VariableDeclarationStatement",
                    "src": "1115:34:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "++",
                          "prefix": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 994,
                              "type": "uint256",
                              "value": "currentPhotoId"
                            },
                            "id": 1037,
                            "name": "Identifier",
                            "src": "1159:14:3"
                          }
                        ],
                        "id": 1038,
                        "name": "UnaryOperation",
                        "src": "1159:16:3"
                      }
                    ],
                    "id": 1039,
                    "name": "ExpressionStatement",
                    "src": "1159:16:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                3521
                              ],
                              "referencedDeclaration": 3521,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 1040,
                            "name": "Identifier",
                            "src": "1185:5:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1025,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 1041,
                            "name": "Identifier",
                            "src": "1191:2:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1033,
                              "type": "uint256",
                              "value": "newPhotoId"
                            },
                            "id": 1042,
                            "name": "Identifier",
                            "src": "1195:10:3"
                          }
                        ],
                        "id": 1043,
                        "name": "FunctionCall",
                        "src": "1185:21:3"
                      }
                    ],
                    "id": 1044,
                    "name": "ExpressionStatement",
                    "src": "1185:21:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3834,
                              "type": "function (uint256,string memory)",
                              "value": "_setTokenURI"
                            },
                            "id": 1045,
                            "name": "Identifier",
                            "src": "1216:12:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1033,
                              "type": "uint256",
                              "value": "newPhotoId"
                            },
                            "id": 1046,
                            "name": "Identifier",
                            "src": "1229:10:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1027,
                              "type": "string memory",
                              "value": "tokenURI"
                            },
                            "id": 1047,
                            "name": "Identifier",
                            "src": "1241:8:3"
                          }
                        ],
                        "id": 1048,
                        "name": "FunctionCall",
                        "src": "1216:34:3"
                      }
                    ],
                    "id": 1049,
                    "name": "ExpressionStatement",
                    "src": "1216:34:3"
                  }
                ],
                "id": 1050,
                "name": "Block",
                "src": "1073:184:3"
              }
            ],
            "id": 1051,
            "name": "FunctionDefinition",
            "src": "1001:256:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "withdraw",
              "scope": 1073,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenId",
                      "scope": 1061,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1052,
                        "name": "ElementaryTypeName",
                        "src": "1276:7:3"
                      }
                    ],
                    "id": 1053,
                    "name": "VariableDeclaration",
                    "src": "1276:15:3"
                  }
                ],
                "id": 1054,
                "name": "ParameterList",
                "src": "1275:17:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1055,
                "name": "ParameterList",
                "src": "1300:0:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                3864,
                                3251
                              ],
                              "referencedDeclaration": 3251,
                              "type": "function (uint256)",
                              "value": "_burn"
                            },
                            "id": 1056,
                            "name": "Identifier",
                            "src": "1306:5:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1053,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 1057,
                            "name": "Identifier",
                            "src": "1312:7:3"
                          }
                        ],
                        "id": 1058,
                        "name": "FunctionCall",
                        "src": "1306:14:3"
                      }
                    ],
                    "id": 1059,
                    "name": "ExpressionStatement",
                    "src": "1306:14:3"
                  }
                ],
                "id": 1060,
                "name": "Block",
                "src": "1300:23:3"
              }
            ],
            "id": 1061,
            "name": "FunctionDefinition",
            "src": "1258:65:3"
          },
          {
            "attributes": {
              "documentation": "--------------------------------------\n Getter methods\n--------------------------------------\n--------------------------------------\n Private methods\n--------------------------------------",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getNextPhotoId",
              "scope": 1073,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1062,
                "name": "ParameterList",
                "src": "1585:2:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "nextPhotoId",
                      "scope": 1072,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 1063,
                        "name": "ElementaryTypeName",
                        "src": "1605:4:3"
                      }
                    ],
                    "id": 1064,
                    "name": "VariableDeclaration",
                    "src": "1605:16:3"
                  }
                ],
                "id": 1065,
                "name": "ParameterList",
                "src": "1604:18:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 1065
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "add",
                              "referencedDeclaration": 2799,
                              "type": "function (uint256,uint256) pure returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 994,
                                  "type": "uint256",
                                  "value": "currentPhotoId"
                                },
                                "id": 1066,
                                "name": "Identifier",
                                "src": "1640:14:3"
                              }
                            ],
                            "id": 1067,
                            "name": "MemberAccess",
                            "src": "1640:18:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 1068,
                            "name": "Literal",
                            "src": "1659:1:3"
                          }
                        ],
                        "id": 1069,
                        "name": "FunctionCall",
                        "src": "1640:21:3"
                      }
                    ],
                    "id": 1070,
                    "name": "Return",
                    "src": "1633:28:3"
                  }
                ],
                "id": 1071,
                "name": "Block",
                "src": "1623:45:3"
              }
            ],
            "id": 1072,
            "name": "FunctionDefinition",
            "src": "1562:106:3"
          }
        ],
        "id": 1073,
        "name": "ContractDefinition",
        "src": "292:1384:3"
      }
    ],
    "id": 1074,
    "name": "SourceUnit",
    "src": "0:1677:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.2",
  "updatedAt": "2021-08-06T11:34:55.004Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "mint(address,string)": {
        "details": "mint a photoNFTtokenURI - URL include ipfs hash"
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "owner address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted.     * Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {},
    "notice": "- This is the NFT contract for a photo"
  }
}